//////////////////////
// ratios
//////////////////////

/* ratios
0.618
0.809
1
1.238
2.619
3.224
*/

//////////////////////
// colors
//////////////////////

$color-primary: #00B0FF !default;
$color-primary-light: lighten($color-primary, 25%) !default;

$color-text: #000000 !default;
$color-text-light: lighten($color-text, 65%) !default;

$color-background: #ffffff !default;

$color-white: #ffffff !default;
$color-white-light: rgba($color-white, 0.75) !default;
$color-white-lighter: rgba($color-white, 0.5) !default;

$color-grey: #f8f8f8 !default;

$color-black: #000000 !default;

//////////////////////
// fonts
//////////////////////

// usage: @include font(sans-regular);
$xt-fonts: (
  sans-light: (
    font-family: unquote('"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif'),
    font-weight: 300,
    font-style: normal,
  ),
  sans-regular: (
    font-family: unquote('"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif'),
    font-weight: 400,
    font-style: normal,
  ),
  sans-medium: (
    font-family: unquote('"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif'),
    font-weight: 600,
    font-style: normal,
  ),
) !default;
/*
font-family: 'PT Sans', sans-serif;
font-family: 'Lato', sans-serif;
font-family: 'Open Sans', sans-serif;
font-family: 'Fira Sans Condensed', sans-serif;
*/
// export fonts
@mixin font($key, $important:false) {
  $map: map-get($xt-fonts, $key);
  @each $property, $value in $map {
    @if $important == !important {
      #{$property}: $value !important;
    } @else {
      #{$property}: $value;
    }
  }
}

//////////////////////
// spacing
//////////////////////

// @include spacing-headers;
@mixin spacing-headers {
  margin-top: 2.619rem;
  margin-bottom: 1.238rem;
  &:first-child {
    margin-top: 0 !important;
  }
}

// @include spacing-headers-small;
@mixin spacing-headers-small {
  margin-top: 1.238rem;
  margin-bottom: 1rem;
  &:first-child {
    margin-top: 0 !important;
  }
}

// @include spacing-text;
@mixin spacing-text {
  margin-bottom: 1rem;
  &:last-child {
    margin-bottom: 0 !important;
  }
}

//////////////////////
// mixins
//////////////////////

// @include box;
@mixin box {
  position: relative;
  float: left;
  width: 100%;
}

// @include clearfix;
@mixin clearfix {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// @include no-selection;
@mixin no-selection {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// @include text-selection;
@mixin text-selection {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

// @include accelerate;
@mixin accelerate {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-perspective: 1000;
  perspective: 1000;
  transform: translateZ(0);
}

// #{$hover} {}
$hover: "&:hover:not(.active), &.hover:not(.active)";

// #{$active} {}
$active: "&:active, &.active, &:active:focus, &:active.focus, &.active:focus, &.active.focus";

// #{$focus} {}
$focus: "&:focus, &.focus";

//////////////////////
// xt-overlay
//////////////////////

@mixin xt-overlay($item, $direction:'vertical') {
  #{$item} {
    display: none;
    z-index: 80;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
  #{$item}.active,
  #{$item}.fadeout {
    display: block;
  }
  @if $direction == 'vertical' {
    html.xt-fixed {
      body {
        overflow-y: hidden;
      }
      #{$item} {
        overflow-y: scroll;
      }
    }
  } @elseif $direction == 'horizontal' {
    html.xt-fixed {
      body {
        overflow-x: hidden;
      }
      #{$item} {
        overflow-x: scroll;
      }
    }
  }
}

//////////////////////
// xt-scroll
//////////////////////

@mixin xt-scroll($item, $position:'top', $pos:false) {
  #{$item} {
    .show-scroll {
      display: none;
    }
    .hide-scroll {
      display: block;
    }
  }
  #{$item}.active.xt-clone {
    display: block !important;
  }
  #{$item}.active:not(.xt-clone) {
    position: fixed !important;
    z-index: 70;
    @if $position == 'top' {
      @if $pos {
        top: $pos;
      } @else {
        top: 0;
      }
    } @elseif $position == 'bottom' {
      @if $pos {
        bottom: $pos;
      } @else {
        bottom: 0;
      }
    }
    .show-scroll {
      display: block;
    }
    .hide-scroll {
      display: none;
    }
  }
}
