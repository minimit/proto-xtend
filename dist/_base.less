//////////////////////
// imports
//////////////////////

@import "_variables.less";

//////////////////////
// normalize
//////////////////////

img {
  display: block;
}
a,
button,
.button {
  cursor: pointer;
  text-decoration: none;
  &:focus {
    outline: 0;
  }
}

//////////////////////
// structure
//////////////////////

html,
body {
  height: 100%;
}
html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
  overflow-x: hidden;
  overflow-y: scroll;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
}

//////////////////////
// utils
//////////////////////

.show {
  display: block !important;
}
.hide {
  display: none !important;
}
.nowrap {
  white-space: nowrap;
}
[disabled] {
  cursor: default;
  opacity: 0.75;
  pointer-events: none;
}

//////////////////////
// icons
//////////////////////

/* caret */
.caret-down,
.caret-up,
.caret-right,
.caret-left {
  vertical-align: middle;
  top: -.08em;
}
.caret-down {
  border-style: solid;
  border-color: transparent;
  border-bottom-width: 0 !important; 
}
.caret-up {
  border-style: solid;
  border-color: transparent;
  border-top-width: 0 !important; 
}
.caret-right {
  border-style: solid;
  border-color: transparent;
  border-right-width: 0 !important; 
}
.caret-left {
  border-style: solid;
  border-color: transparent;
  border-left-width: 0 !important; 
}

//////////////////////
// button
//////////////////////

.button {
  display: inline-block;
  position: relative;
  vertical-align: middle;
  text-align: center;
  // content
  /*
  .left {
    float: left;
    top: .1em; // vertical fix
  }
  .right {
    float: right;
    top: .1em; // vertical fix
  }
  */
  .text {
    display: inline-block;
    overflow: hidden;
  }
}

//////////////////////
// contain
//////////////////////

.contain {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  &.fluid {
    width: auto !important;
  }
}

//////////////////////
// item + group + block
//////////////////////

.item,
.group,
.block {
  position: relative;
  max-width: 100%;
  &.full {
    width: 100%;
  }
}
.item {
  -webkit-flex: 1 1 100%;
  -ms-flex: 1 1 100%;
  flex: 1 1 100%;
  width: 100%;
}
.group {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

//////////////////////
// grid + spacer + media + card
//////////////////////

.grid,
.spacer {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  &.reverse {
    -webkit-flex-direction: row-reverse;
    -ms-flex-direction: row-reverse;
    flex-direction: row-reverse;
  }
}
.media,
.card {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  &.reverse {
    -webkit-flex-direction: column-reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
  }
  -ms-flex-preferred-size: auto;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}
.grid,
.spacer,
.media,
.card {
  /* alignment */
  &.middle {
    > * {
      -webkit-align-items: center;
      -ms-align-items: center;
      align-items: center;
      -webkit-align-self: center;
      -ms-flex-item-align: center;
      align-self: center;
    }
  }
  &.top {
    > * {
      -webkit-align-items: flex-start;
      -ms-align-items: start;
      align-items: flex-start;
      -webkit-align-self: flex-start;
      -ms-flex-item-align: start;
      align-self: flex-start;
    }
  }
  &.bottom {
    > * {
      -webkit-align-items: flex-end;
      -ms-align-items: end;
      align-items: flex-end;
      -webkit-align-self: flex-end;
      -ms-flex-item-align: end;
      align-self: flex-end;
    }
  }
  &.stretch {
    > * {
      -webkit-align-items: stretch;
      -ms-align-items: stretch;
      align-items: stretch;
      -webkit-align-self: stretch;
      -ms-flex-item-align: stretch;
      align-self: stretch;
      > * {
        height: 100%;
      }
    }
  }
  /* alignment */
  > * {
    &.middle {
      -webkit-align-self: center;
      -ms-flex-item-align: center;
      align-self: center;
    }
    &.top {
      -webkit-align-self: flex-start;
      -ms-flex-item-align: start;
      align-self: flex-start;
    }
    &.bottom {
      -webkit-align-self: flex-end;
      -ms-flex-item-align: end;
      align-self: flex-end;
    }
    &.stretch {
      -webkit-align-self: stretch;
      -ms-flex-item-align: stretch;
      align-self: stretch;
    }
  }
  /* justification */
  &.left {
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
    > .block {
      -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
      justify-content: flex-start;
    }
  }
  &.right {
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end;
    > .block {
      -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
      justify-content: flex-end;
    }
  }
  &.center {
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
    > .block {
      -webkit-justify-content: center;
      -ms-flex-pack: center;
      justify-content: center;
    }
  }
  &.between {
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    > .block {
      -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
      justify-content: space-between;
    }
  }
  &.around {
    -webkit-justify-content: space-around;
    -ms-flex-pack: distribute;
    justify-content: space-around;
    > .block {
      -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
      justify-content: space-around;
    }
  }
}
.horizontal {
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  &.reverse {
    -webkit-flex-direction: row-reverse;
    -ms-flex-direction: row-reverse;
    flex-direction: row-reverse;
  }
  > .block.fluid {
    -webkit-flex: 1 1 0%;
    -ms-flex: 1 1 0%;
    flex: 1 1 0%;
  }
  // items styles for vertical + horizontal
  &.card {
    > .block {
      &:before {
        display: none;
      }
      &:after {
        display: block;
      }
    }
  }
}

//////////////////////
// card
//////////////////////

.card {
  width: 100%;
  margin: 0 !important; // no negative margin
  > *:not(.block) {
    padding: 0 !important; // no padding
  }
  // separator
  &.separator {
    > .block {
      display: -webkit-flex;
      /* display: -ms-flexbox; // BUG ie10 breaks layout */
      display: flex;
      -webkit-align-self: stretch !important;
      /*-ms-flex-item-align: stretch !important; // BUG ie10 breaks layout */
      align-self: stretch !important;
      &:first-child:before,
      &:first-child:after {
        display: none !important;
      }
    }
    > .block:before { // separator for .block vertical
      content: '';
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      .reverse& {
        top: auto;
        bottom: 0;
        left: auto;
        right: 0;
      }
    }
    > .block:after { // separator for .block horizontal
      content: '';
      display: none;
      position: absolute;
      top: 0;
      left: 0;
      .reverse& {
        top: auto;
        bottom: 0;
        left: auto;
        right: 0;
      }
    }
  }
  // not separator
  &:not(.separator) {
    &:not(.reverse) {
      &.horizontal, &[class*=" horizontal-"] {
        > .block + .block {
          padding-left: 0;
        }
      }
      &:not(.horizontal):not([class*=" horizontal-"]) {
        > .block + .block {
          padding-top: 0;
        }
      }
    }
    &.reverse {
      &.horizontal, &[class*=" horizontal-"] {
        > .block + .block {
          padding-right: 0;
        }
      }
      &:not(.horizontal):not([class*=" horizontal-"]) {
        > .block + .block {
          padding-bottom: 0;
        }
      }
    }
  }
}

//////////////////////
// toggle
//////////////////////

.toggle-block {
  display: none !important;
  &.active,
  &.fade-out {
    display: block !important;
  }
}
.toggle-flex {
  display: none !important;
  &.active,
  &.fade-out {
    display: -webkit-flex;
    display: -ms-flexbox !important;
    display: flex !important;
  }
}
.toggle-inline {
  display: none !important;
  &.active,
  &.fade-out {
    display: inline !important;
  }
}
.toggle-inline-block {
  display: none !important;
  &.active,
  &.fade-out {
    display: inline-block !important;
  }
}
.toggle-none {
  &.active,
  &.fade-out {
    display: none !important;
  }
}

//////////////////////
// drop
//////////////////////

.drop-outer {
  display: inline-block;
  position: relative;
  /* static */
  &.static {
    position: static;
    .drop,
    .drop-inner {
      width: 100%;
    }
  }
}
.drop {
  .toggle-flex;
  position: absolute;
  z-index: 110;
  /* content */
  .button,
  .drop-outer {
    float: left;
    width: 100%;
    text-align: left;
    white-space: nowrap;
  }
  /* before + after */
  &.before {
    left: auto;
    right: 100%;
  }
  &.after {
    left: 100%;
    right: auto;
  }
  /* left + right */
  &.left {
    left: 0;
    right: auto;
  }
  &.right {
    left: auto;
    right: 0;
  }
  /* bottom + top */
  &.bottom {
    top: 100%;
    bottom: auto;
  }
  &.top {
    top: auto;
    bottom: 100%;
  }
  /* middle */
  &.middle-bottom {
    top: auto;
    bottom: 0;
  }
  &.middle-top {
    top: 0;
    bottom: auto;
  }
  &.middle-top,
  &.middle-bottom,
  &.middle {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
  /* dimensions */
  &.max-height {
    .drop-inner {
      overflow-y: auto;
    }
  }
  &.max-width {
    .drop-inner {
      overflow-x: auto;
    }
  }
  /* others */
  &.fade-out {
    pointer-events: none;
  }
}

//////////////////////
// overlay
//////////////////////

.overlay {
  .toggle-flex;
  position: fixed;
  z-index: 90;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* styles */
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  .overlay-inner {
    position: relative;
    z-index: 110;
    width: 100%;
    min-height: 100vh;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
  .overlay-content {
    position: relative;
    width: 100%;
    -webkit-align-self: center;
    -ms-flex-item-align: center;
    align-self: center;
  }
  /* full */
  &.full {
    .overlay-content {
      position: static;
    }
    .overlay-content + .xt-backdrop {
      display: none;
    }
  }
  /* close */
  .overlay-close {
    position: absolute !important;
    top: 0;
    right: 0;
  }
  .overlay-close + * {
    margin-top: 0;
  }
}

//////////////////////
// plugin
//////////////////////

/* .xt-container + .xt-position */
.xt-container {
  position: relative;
  width: 100%;
}
.xt-position {
  float: left;
  width: 100%;
}

/* .xt-backdrop */
.xt-backdrop {
  position: fixed;
  z-index: 100;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.backdrop-over {
  &.active,
  &.fade-out {
    position: relative;
    z-index: 110;
  }
}

/* .xt-fixed */
html.xt-fixed-vertical {
  body {
    overflow-y: hidden;
  }
  .overlay {
    overflow-y: scroll;
  }
}
html.xt-fixed-horizontal {
  body {
    overflow-x: hidden;
  }
  .overlay {
    overflow-x: scroll;
  }
}

//////////////////////
// animations
//////////////////////

.collapse-height {
  overflow: hidden;
  height: 0;
}
.collapse-width {
  overflow: hidden;
  width: 0;
}
.no-anim,
.no-anim .xt-backdrop {
  animation: none !important;
  transition: none !important;
}

//////////////////////
// utils
//////////////////////

// .clear;
.clear {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// .float;
.float {
  .clear;
  position: relative;
  float: left;
  width: 100%;
}
.float-left {
  float: left !important;
  margin-right: auto !important;
}
.float-right {
  float: right !important;
  margin-left: auto !important;
}

// img.fluid;
img.fluid {
  max-width: 100%;
  height: auto;
}

// .no-selection;
.no-selection {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// .text-selection;
.text-selection {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

// .accelerate;
.accelerate {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-perspective: 1000;
  perspective: 1000;
  transform: translateZ(0);
}

//////////////////////
// plugins
//////////////////////

// .xt-scroll();
.xt-scroll(@position:'top', @pos:0) {
  .show-scroll {
    display: none;
  }
  .hide-scroll {
    display: block;
  }
  &.active.xt-clone {
    display: block !important;
  }
  &.active:not(.xt-clone) {
    position: fixed !important;
    width: inherit; // fix fixed width
    z-index: 70;
    & when (@position = 'top') {
      top: @pos;
    }
    & when (@position = 'bottom') {
      bottom: @pos;
    }
    .show-scroll {
      display: block;
    }
    .hide-scroll {
      display: none;
    }
  }
}

//////////////////////
// generate
//////////////////////

/* default */
.grid(size; @columns); // default grid
.size-auto {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  max-width: none;
  width: auto;
}

/* responsive */
.for(@breakpoints); .-each(@value) {
  @name: extract(@value, 1);
  @query: "min-@{name}";
  @media @@query {
    
    // generate grid
    .grid(@name; @columns);
    // -auto
    .@{name}-auto {
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto;
      max-width: none;
      width: auto;
    }
    // .contain
    @unit: "contain-@{name}";
    .contain {
      width: unit(@@unit, px);
    }
    // .horizontal
    .horizontal-@{name} {
      -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
      flex-wrap: nowrap;
      -webkit-flex-direction: row;
      -ms-flex-direction: row;
      flex-direction: row;
      &.reverse {
        -webkit-flex-direction: row-reverse;
        -ms-flex-direction: row-reverse;
        flex-direction: row-reverse;
      }
      > .block.fluid {
        -webkit-flex: 1 1 0%;
        -ms-flex: 1 1 0%;
        flex: 1 1 0%;
      }
      // items styles for vertical + horizontal
      &.card {
        > .block {
          &:before {
            display: none;
          }
          &:after {
            display: block;
          }
        }
      }
    }
    
  }
}

// .grid
.grid(@name; @columns; @index: 1) when (@index =< @columns) {
  .grid(@name; @columns; (@index + 1));
  .@{name}-@{index} {
    @val: (percentage(@index / @columns));
    -webkit-flex-basis: @val;
    -ms-flex-preferred-size: @val;
    flex-basis: @val;
    max-width: @val;
    width: @val;
  }
}

// .for loop
.for(@i, @n) {.-each(@i)}
.for(@n)     when (isnumber(@n)) {.for(1, @n)}
.for(@i, @n) when not (@i = @n)  {
  .for((@i + (@n - @i) / abs(@n - @i)), @n);
}

// .for-each loop
.for(@array)   when (default()) {.for-impl_(length(@array))}
.for-impl_(@i) when (@i > 1)    {.for-impl_((@i - 1))}
.for-impl_(@i) when (@i > 0)    {.-each(extract(@array, @i))}
